# .github/workflows/ci-cd.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  build-and-push:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push train image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.train
          push: true
          tags: hirschazer/mnist-train:latest
      
      - name: Build and push upload image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.upload
          push: true
          tags: hirschazer/mnist-upload:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest  # 使用 GitHub 托管的 runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 配置 kubectl
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # 解码 Kubeconfig（从 Secrets 中获取）
      - name: Decode Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      # 部署 InferenceService
      - name: Deploy InferenceService
        run: |
          kubectl apply -f kserve_model_deployment.yaml

      # 设置 Python 环境并运行 Pipeline
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install kfp

      - name: Trigger Pipeline Run
        run: |
          python -c "
          from kfp import Client
          client = Client(host='http://45.149.207.13:38183/apis/v1beta1')  # 如果通过 Ingress
          experiment = client.create_experiment('mnist-experiment')
          run = client.run_pipeline(
              experiment_id=experiment.id,
              job_name='mnist-pipeline-run',
              pipeline_package_path='mnist_pipeline.yaml'
          )
          print(f'Pipeline run created with ID: {run.run_id}')
          "
