# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  build-and-push:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push train image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.train
          push: true
          tags: hirschazer/mnist-train:latest
      
      - name: Build and push upload image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.upload
          push: true
          tags: hirschazer/mnist-upload:latest

  deploy:
    needs: build-and-push
    runs-on: self-hosted  # 改为 self-hosted，这样可以直接访问你的 k8s 集群
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # deploy job steps
      - name: Setup kubectl
        run: |
          mkdir -p $HOME/.kube
          cat <<EOF > $HOME/.kube/config
          apiVersion: v1
          clusters:
          - cluster:
              server: https://45.149.207.13:6443
              insecure-skip-tls-verify: true
            name: kubeflow
          contexts:
          - context:
              cluster: kubeflow
              user: test-admin
            name: kubeflow
          current-context: kubeflow
          users:
          - name: test-admin
            user:
              token: "${{ secrets.KUBE_TOKEN }}"
          EOF


      # 部署 InferenceService
      - name: Deploy InferenceService
        run: |
          kubectl apply -f kserve_model_deployment.yaml

      # 设置 Python 环境并运行 Pipeline
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install kfp

      - name: Trigger Pipeline Run
        env:
          KUBEFLOW_HOST: "http://45.149.207.13:38183"
        run: |
          python -c '
          from kfp import Client
          # 初始化客户端，直接指定 host 和 namespace
          client = Client(host="http://45.149.207.13:38183/pipeline", namespace="kubeflow", verify_ssl=False)
          
          # 创建实验
          experiment = client.create_experiment("mnist-experiment")

          # 创建并运行管道
          run = client.run_pipeline(
              experiment_id=experiment.id,
              job_name="mnist-pipeline-run",
              pipeline_package_path="mnist_pipeline.yaml",
          )
          print(f"Pipeline run created with ID: {run.run_id}")
          '
